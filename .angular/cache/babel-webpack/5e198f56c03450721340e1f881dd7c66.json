{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MessageService } from '../../message.service';\nimport { cloneAnnonceValues, CreateAnnonce } from '../../Common/Schemas/creation';\nlet AnnoncePopupComponent = class AnnoncePopupComponent {\n  constructor(dialogRef, annonce, msg) {\n    this.dialogRef = dialogRef;\n    this.annonce = annonce;\n    this.msg = msg;\n  } // Initialization:\n  //  + Creation of the temporary annonce\n  //  + Define mode of the popup: Creation or Edition\n\n\n  ngOnInit() {\n    // Creation of the temporary Mission object.\n    this.tmpAnnonce = CreateAnnonce(); // Creation mode\n\n    if (this.annonce === null) {\n      this.creation = true;\n    } // Edition mode\n    else {\n      this.creation = false;\n      cloneAnnonceValues(this.annonce, this.tmpAnnonce); // In Edition mode we initialize the temporary with the value of the annonce.\n    }\n  }\n\n  addTag(event) {\n    const value = (event.value || '').trim();\n\n    if (value) {\n      this.tmpAnnonce.tags.push(value);\n    }\n\n    event.chipInput.clear();\n  }\n\n  removeTag(tag) {\n    const index = this.tmpAnnonce.tags.indexOf(tag);\n\n    if (index >= 0) {\n      this.tmpAnnonce.tags.splice(index, 1);\n    }\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  submit() {\n    // Creation mode: creation of a new annonce with the information entered in the popup\n    if (this.creation) {\n      this.msg.Create('annonce', this.tmpAnnonce).subscribe(res => {\n        if (res.status === 'error') {\n          this.errorMessage.sendError(res.data.reason);\n        } else {\n          this.dialogRef.close(res.data);\n        }\n      });\n    } // Edition mode: update an annonce with the information entered in the popup\n    else {\n      this.msg.Update('annonce', this.tmpAnnonce).subscribe(res => {\n        if (res.status === 'error') {\n          this.errorMessage.sendError(res.data.reason);\n        } else {\n          cloneAnnonceValues(this.tmpAnnonce, this.annonce);\n          this.dialogRef.close(this.annonce);\n        }\n      });\n    }\n  }\n\n};\n\n__decorate([ViewChild('errorMessageComponent')], AnnoncePopupComponent.prototype, \"errorMessage\", void 0);\n\nAnnoncePopupComponent = __decorate([Component({\n  selector: 'app-annonce-popup',\n  templateUrl: './annonce-popup.component.html',\n  styleUrls: ['./annonce-popup.component.scss']\n}), __param(1, Inject(MAT_DIALOG_DATA)), __param(2, Inject(MessageService))], AnnoncePopupComponent);\nexport { AnnoncePopupComponent };","map":null,"metadata":{},"sourceType":"module"}