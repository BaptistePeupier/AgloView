{"ast":null,"code":"import { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\"; // The Message service is the way of communication with de backend.\n// Each request from the frontend is conducted here, to the chosen route and the response from the backend is grabbed\n// here and put in a ResponseData that will be used by the frontend.\n\nexport let MessageService = /*#__PURE__*/(() => {\n  class MessageService {\n    constructor(http) {\n      this.http = http;\n    } // Method that send a POST (Create) to the backend using the route and data passed.\n\n\n    Create(url, data) {\n      return this.http.post(environment.apiHost + url, data, {\n        withCredentials: true\n      });\n    } // Method that send a GET (Read) to the backend using the route and data passed.\n\n\n    Read(url, data) {\n      return this.http.get(environment.apiHost + url, {\n        params: data,\n        withCredentials: true\n      });\n    } // Method that send a PUT (Update) to the backend using the route and data passed.\n\n\n    Update(url, data) {\n      return this.http.put(environment.apiHost + url, data, {\n        withCredentials: true\n      });\n    } // Method that send a DELETE (Delete) to the backend using the route and data passed.\n\n\n    Delete(url, data) {\n      return this.http.request(\"DELETE\", environment.apiHost + url, {\n        body: data,\n        withCredentials: true\n      });\n    }\n\n  }\n\n  MessageService.ɵfac = function MessageService_Factory(t) {\n    return new (t || MessageService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  MessageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MessageService,\n    factory: MessageService.ɵfac,\n    providedIn: 'root'\n  });\n  return MessageService;\n})();","map":null,"metadata":{},"sourceType":"module"}