{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MessageService } from '../../../../message.service';\nimport { cloneAnnonceurValues, createAnnonceur } from '../../../../Common/Schemas/creation';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/material/card\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"../../../../directives/email-validator.directive\";\nimport * as i7 from \"../../../../directives/password-validator.directive\";\nimport * as i8 from \"@angular/material/tooltip\";\nimport * as i9 from \"../../../../Common/error-message/error-message.component\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"../../../../message.service\";\nconst _c0 = [\"errorMessageComponent\"];\nexport let AnnonceurPopupComponent = /*#__PURE__*/(() => {\n  class AnnonceurPopupComponent {\n    constructor(dialogRef, annonceur, msg) {\n      this.dialogRef = dialogRef;\n      this.annonceur = annonceur;\n      this.msg = msg;\n    } // Initialization:\n    //  + Creation of the temporary Annonceur\n    //  + Define mode of the popup: Creation or Edition\n\n\n    ngOnInit() {\n      this.tmpAnnonceur = createAnnonceur(); // Creation mode\n\n      if (this.annonceur === null) {\n        this.creation = true;\n      } // Edition mode\n      else {\n        this.creation = false;\n        cloneAnnonceurValues(this.annonceur, this.tmpAnnonceur); // In Edition mode we initialize the temporary with the value of the annonceur.\n      }\n\n      console.log(this.tmpAnnonceur); // this.msg.Read('annonceur', this.tmpAnnonceur).subscribe(\n      //   res => {\n      //     if (res.status === 'error') {\n      //       this.errorMessage.sendError(res.data.reason);\n      //     }\n      //     else {\n      //       this.dialogRef.close(this.tmpAnnonceur);\n      //     }\n      //   }\n      // )\n    } // Called when button \"Cancel\" is clicked.\n\n\n    onNoClick() {\n      this.dialogRef.close();\n    } // Operation performed when clicking on the \"Submit\" button.\n    // Change according to the mode of the popup (Creation or Edition of a Contact).\n\n\n    SubmitAnnonceur() {\n      if (this.creation) {\n        this.msg.Create('annonceur', this.tmpAnnonceur).subscribe(res => {\n          if (res.status === 'error') {\n            this.errorMessage.sendError(res.data.reason);\n          } else {\n            this.dialogRef.close(this.tmpAnnonceur);\n          }\n        });\n      } else {\n        if (this.tmpAnnonceur.password === \"\") this.tmpAnnonceur.password = null;\n        this.msg.Update('annonceur', this.tmpAnnonceur).subscribe(res => {\n          if (res.status === 'error') {\n            this.errorMessage.sendError(res.data.reason);\n          } else {\n            cloneAnnonceurValues(this.tmpAnnonceur, this.annonceur);\n            this.dialogRef.close(this.tmpAnnonceur);\n          }\n        });\n      }\n    }\n\n  }\n\n  AnnonceurPopupComponent.ɵfac = function AnnonceurPopupComponent_Factory(t) {\n    return new (t || AnnonceurPopupComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(MessageService));\n  };\n\n  AnnonceurPopupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AnnonceurPopupComponent,\n    selectors: [[\"app-annonceur-popup\"]],\n    viewQuery: function AnnonceurPopupComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.errorMessage = _t.first);\n      }\n    },\n    decls: 21,\n    vars: 4,\n    consts: [[1, \"popupGroupField\"], [1, \"InputTitle\"], [\"matInput\", \"\", \"placeholder\", \"Annonceur's pseudo *\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"email\", \"required\", \"\", \"emailValidator\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"required\", \"\", \"passwordValidator\", \"\", \"matTooltip\", \"Doit contenir au moins 8 caract\\u00E8res, 1 majuscule, 1 minuscule, 1 nombre, 1 caract\\u00E8re sp\\u00E9cial (? ! . * ' ')\", 3, \"ngModel\", \"matTooltipPosition\", \"ngModelChange\"], [\"errorMessageComponent\", \"\"], [1, \"ButtonFooter\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function AnnonceurPopupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-dialog-content\");\n        i0.ɵɵelementStart(1, \"mat-card\", 0);\n        i0.ɵɵelementStart(2, \"mat-card-title\", 1);\n        i0.ɵɵelementStart(3, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function AnnonceurPopupComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.tmpAnnonceur.pseudo = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-card-content\");\n        i0.ɵɵelementStart(5, \"mat-form-field\");\n        i0.ɵɵelementStart(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function AnnonceurPopupComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.tmpAnnonceur.email = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"mat-form-field\");\n        i0.ɵɵelementStart(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function AnnonceurPopupComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.tmpAnnonceur.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"app-error-message\", null, 5);\n        i0.ɵɵelementStart(16, \"div\", 6);\n        i0.ɵɵelementStart(17, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function AnnonceurPopupComponent_Template_button_click_17_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ɵɵtext(18, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function AnnonceurPopupComponent_Template_button_click_19_listener() {\n          return ctx.SubmitAnnonceur();\n        });\n        i0.ɵɵtext(20, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.tmpAnnonceur.pseudo);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.tmpAnnonceur.email);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.tmpAnnonceur.password)(\"matTooltipPosition\", \"right\");\n      }\n    },\n    directives: [i1.MatDialogContent, i2.MatCard, i2.MatCardTitle, i3.MatInput, i4.DefaultValueAccessor, i4.RequiredValidator, i4.NgControlStatus, i4.NgModel, i2.MatCardContent, i5.MatFormField, i5.MatLabel, i6.EmailValidatorDirective, i7.PasswordValidatorDirective, i8.MatTooltip, i9.ErrorMessageComponent, i10.MatButton],\n    styles: [\"\"]\n  });\n  return AnnonceurPopupComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}